/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&msc {
    acceleration-exponent = <3>;
    time-to-max-speed-ms = <100>;
};

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    behaviors {
        hold_tap_kp: hold_tap_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            flavor = "hold-preferred";
            quick-tap-ms = <5>;
        };

        hold_tap_layer: hold_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&hold_tap_kp LS(LEFT_ALT) ESC     &kp N1  &kp N2            &kp N3    &kp N4  &kp N5                                                                               &kp N6                           &kp N7             &kp N8     &kp N9             &kp N0    &kp MINUS
&kp TAB                           &kp Q   &kp W             &kp E     &kp R   &kp T                                                                                &kp Y                            &kp U              &kp I      &kp O              &kp P     &kp EQUAL
&hold_tap_kp LEFT_CONTROL ESCAPE  &kp A   &kp S             &kp D     &kp F   &kp G                                                                                &kp H                            &kp J              &kp K      &kp L              &kp SEMI  &kp SQT
&hold_tap_kp LEFT_SHIFT GRAVE     &kp Z   &kp X             &kp C     &kp V   &kp B           &kp C_MUTE                         &rgb_ug RGB_TOG                   &kp N                            &kp M              &kp COMMA  &kp DOT            &kp FSLH  &hold_tap_kp RSHFT BACKSLASH
                                          &kp LEFT_CONTROL  &kp LALT  &mo 1   &kp LEFT_SHIFT  &hold_tap_kp LEFT_COMMAND SPACE    &hold_tap_kp RIGHT_CONTROL ENTER  &hold_tap_layer RAISE BACKSPACE  &kp RIGHT_COMMAND  &kp RALT   &kp RIGHT_CONTROL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp RG(MINUS) RG(PLUS)>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans          &kp F1     &kp F2     &kp F3       &kp F4    &kp F5                                  &kp F6             &kp F7        &kp F8                &kp F9                 &kp F10   &kp F11
&kp GRAVE       &kp N1     &kp N2     &kp N3       &kp N4    &kp N5                                  &kp N6             &kp NUMBER_7  &kp N8                &kp N9                 &kp N0    &kp F12
&trans          &kp EXCL   &kp AT     &kp HASH     &kp DLLR  &kp PRCNT                               &kp CARET          &kp AMPS      &kp KP_MULTIPLY       &kp LPAR               &kp RPAR  &kp PIPE
&kp LEFT_SHIFT  &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC   &trans    &trans             &kp LBKT           &kp RBKT      &kp RG(LEFT_BRACKET)  &kp RG(RIGHT_BRACKET)  &kp BSLH  &kp RIGHT_SHIFT
                           &trans     &trans       &trans    &trans     &trans    &kp RA(RC(RG(P)))  &kp RA(RC(RG(V)))  &trans        &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                &mmv MOVE_LEFT            &mmv MOVE_DOWN             &mmv MOVE_UP      &mmv MOVE_RIGHT  &kp DELETE        &kp RA(BACKSPACE)
&trans        &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans                                      &msc SCRL_LEFT            &msc SCRL_DOWN             &msc SCRL_UP      &msc SCRL_RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp CAPSLOCK  &kp LALT      &kp LCTRL     &trans        &trans        &trans                                      &kp LEFT                  &kp DOWN                   &kp UP_ARROW      &kp RIGHT        &kp LEFT_BRACE    &kp RIGHT_BRACE
&trans        &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans             &trans           &trans  &kp RG(RS(LEFT_BRACKET))  &kp RG(RS(RIGHT_BRACKET))  &kp LC(LEFT)      &kp LC(RIGHT)    &kp BACKSLASH     &trans
                            &trans        &trans        &trans        &kp RS(RG(SPACE))  &kp RG(SPACE)    &trans  &trans                    &kp C_PREVIOUS             &kp C_PLAY_PAUSE  &kp C_NEXT
            >;

            sensor-bindings =
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>,
                <&inc_dec_kp RG(PLUS) RG(MINUS)>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &kp W  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };
    };
};
